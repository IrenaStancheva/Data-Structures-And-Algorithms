class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        std::unordered_set<int> set;

        for(auto num : nums)
        {
            set.insert(num);
        }

        int longestConsec  = 0;

        for(int i = 0; i < nums.size(); ++i)
        {
            if(set.find(nums[i] - 1) == set.end())
            {
                int number = nums[i];
                int currentLongest = 1;
                while(set.find(number + 1) != set.end())
                {
                    currentLongest++;
                    number++;
                }
                longestConsec = std::max(longestConsec, currentLongest);
            }
        }
        
        return longestConsec;
    }
};
