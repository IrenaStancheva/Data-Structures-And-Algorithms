class Solution {
public:
    bool valid(char stackParentheses, char stringParentheses){
        if(stackParentheses == '(' && stringParentheses == ')'){
            return true;
        }
        if(stackParentheses == '[' && stringParentheses == ']'){
            return true;
        }
        if(stackParentheses == '{' && stringParentheses == '}'){
            return true;
        } 

        return false;
    }

    bool isValid(string s) {
        std::stack<char> st;
        int size = s.size();

        for(int i = 0; i < size; i++){
            if(s[i] == '(' || s[i] == '[' || s[i] == '{') {
                st.push(s[i]);
            }
            else {
                if(st.size() == 0 || !valid(st.top(), s[i])) {
                    return false;
                }

                st.pop();
            }
        }

        return (st.size() == 0);
    }
};
