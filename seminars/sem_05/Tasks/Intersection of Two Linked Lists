/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    size_t getSize(ListNode* head){
        size_t size = 0;
        while(head){
            head = head->next;
            size++;
        }
        return size;
    }
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        size_t sizeA = getSize(headA);
        size_t sizeB = getSize(headB);

        while(sizeA < sizeB){
            headB = headB->next;
            sizeB--;
        }
        while(sizeB < sizeA){
            headA = headA->next;
            sizeA--;
        }

        while(headA && headB){
            if(headA == headB){
                return headA;
            }
            headA = headA->next;
            headB = headB->next;
        }

        return nullptr;
    }
};
