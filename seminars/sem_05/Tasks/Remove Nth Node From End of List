/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* iter = head;
        ListNode* cur = head;
        int diff = 0;

        while(diff <= n && iter){
            iter = iter->next;
            diff++;
        }

        while(iter){
            iter = iter->next;
            diff++;
            cur = cur->next;
        }
        if(diff == n){
            ListNode* result = head->next;
            delete head;

            return result;
        }

        ListNode* toDelete = cur->next;
        cur->next = cur->next->next;

        delete toDelete;

        return head;
    }
};
