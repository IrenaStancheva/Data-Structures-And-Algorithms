/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    void bfs(TreeNode* root, vector<int>& res)
    {
        if(!root)
            return;
        
        queue<TreeNode*> q;
        q.push(root);

        while(!q.empty())
        {
            int level_size = q.size();
            res.push_back(q.front()->val);
            
            for(size_t i = 0; i < level_size; i++)
            {
                TreeNode* temp = q.front();
                if(temp->right)
                    q.push(temp->right);
                if(temp->left)
                    q.push(temp->left);
                q.pop(); 
            }
        }
    }
    vector<int> rightSideView(TreeNode* root) {
        vector<int> res;
        bfs(root, res);
        return res;
    }
};
