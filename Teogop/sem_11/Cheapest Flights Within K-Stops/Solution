//USING BELLMAN-FORD LOGIC!!!

class Solution {
public:
    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int k) {
        std::vector<int> dist(n, INT_MAX);
        dist[src] = 0;

        for(int i = 0; i <= k; i++){
            std::vector<int> next_row(dist);

            for(const auto& edge : flights){
                if(dist[edge[0]] != INT_MAX){
                    next_row[edge[1]] = std::min(next_row[edge[1]], dist[edge[0]] + edge[2]);
                }
            }

            dist = std::move(next_row);
        }

        return dist[dst] == INT_MAX? -1 : dist[dst];
    }
};
