struct Comparator
{
    bool operator()(const std::vector<int>& lhs, const std::vector<int>& rhs) const 
    {
            return lhs[0] * lhs[0] + lhs[1] * lhs[1] > rhs[0] * rhs[0] + rhs[1] * rhs[1];
    }
};
class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) 
    {
        std::priority_queue<std::vector<int>, std::vector<std::vector<int>>, Comparator> pq;

        for(auto& point : points)
        {
            pq.push(point);
        }

        std::vector<std::vector<int>> result;
        for(int i = 0; i < k; ++i)
        {
            result.push_back(pq.top());
            pq.pop();
        }

        return result;
    }
};
